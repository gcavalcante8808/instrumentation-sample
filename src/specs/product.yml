openapi: 3.0.0
servers:
  - url: 'http://sample.kubernetes.local'
info:
  description: >-
    :dog: :cat: This is a sample instrumentation presentation server. 
  version: 1.0.0
  title: Instrumentation Sample
  termsOfService: 'http://gpl.org'
  contact:
    email: root@local.host
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags: []
paths:
  /metrics/:
    get:
      summary: Prometheus Metrics Endpoint
      description: ''
      operationId: resources.MetricsView.on_get
      responses:
        '200':
          description: successful operation
  /products/:
    get:
      summary: Get Products List
      description: ''
      operationId: resources.ProductView.on_get
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
      callbacks: {}
    post:
      summary: 'Create new Products'
      description: ''
      operationId: resources.ProductView.on_post
      responses:
        '201':
          description: Ok
        '412':
          description: Pre condition faield.
        default:
          description: Default response
  /products/{product_id}/:
    get:
      summary: Retrieve Product
      description: ''
      operationId: resources.ProductView.on_get
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
          description: product_id
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid Schema used.
        '404':
          description: Product not found.
      callbacks: {}
    put:
      summary: Update a Existent Product
      description: Update Products.
      operationId: resources.ProductView.on_put
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
          description: product_id
      responses:
        '200':
          description: Ok.
        '412':
          description: Pre Condition Failed.
          content:
            application/json:
              schema: {}
        '400':
          description: Some error was ocurred.
        '404':
          description: Product Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        description: Updated product object
        required: true
externalDocs:
  description: See AsyncAPI example
  url: 'https://mermade.github.io/shins/asyncapi.html'
components:
  schemas:
    Product:
      type: object
      required:
        - name
        - price
        - enterprise_id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Name of the Product
        price:
          type: number
          description: Price of the product
        enterprise_id:
          type: number
          description: Company that owns the product
        currency:
          type: string
          description: currency used in the price
          enum:
            - us_dollar
            - br_real
  requestBodies: {}
  securitySchemes: {}
  links: {}
  callbacks: {}
security: []
